[tool.poetry]
authors = ["JorVLP <47005135+JorVLP@users.noreply.github.com>"]
description = "Simulator for Super Auto Pets"
name = "superautosim"
packages = [{ include = "superautosim" }]
readme = "README.md"
version = "0.1.0"

[tool.poetry.dependencies]
python = ">=3.9"


[tool.poetry.group.dev.dependencies]
black = { extras = ["d"], version = "^22.10.0" }
coverage = "^6.5.0"
ipykernel = "^6.16.0"
isort = "^5.11.4"
mypy = { extras = ["dmypy"], version = "^1.0.0" }
pylint = "^2.15.5"
pytest = "^7.2.0"
pytest-cov = "^4.0.0"


[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core>=1.2.0"]


[tool.pylint.basic]
# Minimum line length for functions/classes that require docstrings, shorter ones
# are exempt.
docstring-min-length = 5

ignore-patterns = ["^test_.*py"]
max-attributes = 12


[tool.pylint.format]
# Regexp for a line that is allowed to be longer than the limit.
ignore-long-lines = "^\\s*(# )?<?https?://\\S+>?$"

# Maximum number of characters on a single line.
max-line-length = 100

[tool.pytest.ini_options]
addopts = "--strict-config --cov=superautosim --cov-report=html"
minversion = "6.0"
testpaths = ["tests/"]

[tool.coverage.run]
branch = true

[tool.coverage.report]
show_missing = true
skip_empty = true

[tool.isort]
profile = "black"

[tool.mypy]
exclude = ["^tests"]
no_implicit_optional = false

[tool.pyright]
exclude = ["^tests"]
